@page "/addContact"
@using Asp.Net_Core_Mod_5.Shared
@using BlazorAppMod7.ContactsBlazor.Services
@inject IContactService ContactService
@inject NavigationManager NavigationManager

<h3>Add Contact</h3>


    
<EditForm Model="@Contact" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="FirstName">First Name:</label>
        <InputText id="FirstName" class="form-control" @bind-Value="Contact.FirstName" />
        <ValidationMessage For="@(() => Contact.FirstName)" />
    </div>

    <div class="form-group">
        <label for="LastName">Last Name:</label>
        <InputText id="LastName" class="form-control" @bind-Value="Contact.LastName" />
        <ValidationMessage For="@(() => Contact.LastName)" />
    </div>

    <div class="form-group">
        <label for="PhoneNumber">Phone Number:</label>
        <InputText id="PhoneNumber" class="form-control" @bind-Value="Contact.PhoneNumber" />
    </div>

    <div class="form-group">
        <label for="BirthDate">Birth Date:</label>
        <InputDate id="BirthDate" class="form-control" @bind-Value="Contact.BirthDate" />
    </div>


    <button type="submit" class="btn btn-primary">Submit</button>
    <button type="button" class="btn btn-secondary" @onclick="NavigateToContacts">Cancel</button>

</EditForm>

@code {
    private ContactResponseDto.ContactDto Contact = new ContactResponseDto.ContactDto();

    private async Task HandleValidSubmit()
    {
        try
        {
            if (string.IsNullOrWhiteSpace(Contact.PhoneNumber))
            {
                Contact.PhoneNumber = "";
            }
            Contact.Id = Guid.NewGuid(); // Create a new GUID for the new contact

            await ContactService.AddContact(Contact);
 
            NavigationManager.NavigateTo("/contacts");

        }
        catch (Exception ex)

        {
            Console.WriteLine("------------------------");

            Console.WriteLine(ex.Message); // Log exception message for debugging
        }
    }

    private void NavigateToContacts()
    {
        NavigationManager.NavigateTo("/contacts");
    }

}
